{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useEffect, useState } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction findPeople(_x) {\n  return _findPeople.apply(this, arguments);\n}\nfunction _findPeople() {\n  _findPeople = _asyncToGenerator(function* (sessionId) {\n    try {\n      return yield axios.get(\"http://localhost:8080/members/\" + sessionId);\n    } catch (e) {\n      console.log(\"axios error : \" + e);\n    }\n  });\n  return _findPeople.apply(this, arguments);\n}\nfunction getSessionId() {\n  return _getSessionId.apply(this, arguments);\n}\nfunction _getSessionId() {\n  _getSessionId = _asyncToGenerator(function* () {\n    var sessionId = yield AsyncStorage.getItem(\"sessionId\");\n    return sessionId;\n  });\n  return _getSessionId.apply(this, arguments);\n}\nvar PeopleScreen = function PeopleScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    sessionId = _useState4[0],\n    setSessionId = _useState4[1];\n  useEffect(function () {\n    function initSessionId() {\n      return _initSessionId.apply(this, arguments);\n    }\n    function _initSessionId() {\n      _initSessionId = _asyncToGenerator(function* () {\n        return yield getSessionId();\n      });\n      return _initSessionId.apply(this, arguments);\n    }\n    var result = initSessionId();\n    result.then(function (value) {\n      setSessionId(value);\n    });\n  }, [sessionId, data]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: sessionId\n    }), _jsx(View, {\n      style: styles.searchSection,\n      children: _jsx(Button, {\n        title: \"Search\",\n        onPress: function onPress() {\n          var promise = findPeople(sessionId);\n          promise.then(function (value) {\n            return setData(value);\n          });\n        }\n      })\n    }), _jsx(FlatList, {\n      data: data,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(View, {\n          children: _jsx(Text, {\n            children: item.memberName\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.memberid;\n      },\n      style: {\n        backgroundColor: \"yellow\"\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  searchSection: {}\n});\nexport default PeopleScreen;","map":{"version":3,"names":["useEffect","useState","AsyncStorage","axios","jsx","_jsx","jsxs","_jsxs","findPeople","_x","_findPeople","apply","arguments","_asyncToGenerator","sessionId","get","e","console","log","getSessionId","_getSessionId","getItem","PeopleScreen","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","setSessionId","initSessionId","_initSessionId","result","then","value","View","style","styles","container","children","Text","searchSection","Button","title","onPress","promise","FlatList","renderItem","_ref","item","memberName","keyExtractor","memberid","backgroundColor","StyleSheet","create","flex","alignItems"],"sources":["/Users/jeonjun-wan/Documents/sloppyTalk/src/main/frontend/PeopleScreen.js"],"sourcesContent":["import {Text, View, StyleSheet, Button, FlatList} from \"react-native\";\nimport {useEffect, useState} from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\n\nasync function findPeople(sessionId){\n\n    try{\n        return await axios.get(\"http://localhost:8080/members/\" + sessionId);\n\n    }catch(e){\n        console.log(\"axios error : \" + e);\n    }\n}\n\nasync function getSessionId(){\n    const sessionId = await AsyncStorage.getItem(\"sessionId\");\n    return sessionId;\n}\nconst PeopleScreen = () => {\n\n    const [data, setData] = useState([]);\n    const [sessionId, setSessionId] = useState(\"\");\n\n    useEffect(() => {\n\n        async function initSessionId(){\n            return await getSessionId();\n        }\n\n        const result = initSessionId();\n        result.then(value => {setSessionId(value)});\n\n\n    },[sessionId, data]);\n\n\n    return (\n        <View style={styles.container}>\n            <Text>{sessionId}</Text>\n            <View style={styles.searchSection}>\n                <Button title=\"Search\" onPress={() => {\n                    const promise= findPeople(sessionId);\n                    promise.then(value => setData(value));\n                }}/>\n            </View>\n            <FlatList data={data}\n                      renderItem={({item}) => <View><Text>{item.memberName}</Text></View>}\n                      keyExtractor={item => item.memberid}\n                      style={{backgroundColor:\"yellow\"}}\n            />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container:{\n        flex:1,\n        alignItems:\"center\"\n    },\n    searchSection : {\n\n    }\n})\n\nexport default PeopleScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}