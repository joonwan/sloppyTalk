{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction register(_ref) {\n  var name = _ref.name,\n    loginId = _ref.loginId,\n    password = _ref.password;\n  var data = JSON.stringify({\n    name: name,\n    loginId: loginId,\n    password: password\n  });\n  axios.post(\"http://localhost:8080/members/new\", data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(console.log(\"success\")).catch(function (err) {\n    return console.log(\"axios error : \" + err);\n  });\n}\nvar RegisterScreen = function RegisterScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    onChangeName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loginId = _useState4[0],\n    onChangeLoginId = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    onChangePassword = _useState6[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"Name\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangeName,\n      value: name\n    }), _jsx(Text, {\n      style: styles.text,\n      children: \"Id\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangeLoginId,\n      value: loginId\n    }), _jsx(Text, {\n      style: styles.text,\n      children: \"Password\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangePassword,\n      value: password\n    }), _jsx(Button, {\n      title: \"register\",\n      onPress: function onPress() {\n        register({\n          name: name,\n          loginId: loginId,\n          password: password\n        });\n        navigation.goBack();\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1\n  },\n  input: {\n    borderWidth: 1,\n    marginVertical: 10,\n    borderRadius: 10,\n    height: 40,\n    width: 300\n  },\n  text: {\n    marginLeft: 10,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["useState","axios","jsx","_jsx","jsxs","_jsxs","register","_ref","name","loginId","password","data","JSON","stringify","post","headers","then","console","log","catch","err","RegisterScreen","_ref2","navigation","_useState","_useState2","_slicedToArray","onChangeName","_useState3","_useState4","onChangeLoginId","_useState5","_useState6","onChangePassword","View","style","styles","container","children","Text","text","TextInput","input","onChangeText","value","Button","title","onPress","goBack","StyleSheet","create","alignItems","justifyContent","flex","borderWidth","marginVertical","borderRadius","height","width","marginLeft","fontWeight","textAlign"],"sources":["/Users/jeonjun-wan/Documents/sloppyTalk/src/main/frontend/RegisterScreen.js"],"sourcesContent":["import {View, StyleSheet, TextInput, Button, Text} from \"react-native\";\nimport {useState} from \"react\";\nimport axios from \"axios\";\n\nfunction register({name, loginId, password}){\n    const data = JSON.stringify({name,loginId,password});\n\n    axios.post(\n        \"http://localhost:8080/members/new\",\n        data,\n        {\n            headers:{\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(console.log(\"success\"))\n        .catch(err => console.log(\"axios error : \" + err));\n}\nconst RegisterScreen = ({navigation}) => {\n\n    const [name, onChangeName] = useState(\"\");\n    const [loginId, onChangeLoginId] = useState(\"\");\n    const [password, onChangePassword] = useState(\"\");\n\n    return (\n        <View style={styles.container}>\n\n\n                    <Text style={styles.text}>Name</Text>\n                    <TextInput style={styles.input} onChangeText={onChangeName} value={name}/>\n\n\n                    <Text style={styles.text}>Id</Text>\n                    <TextInput style={styles.input} onChangeText={onChangeLoginId} value={loginId}/>\n\n\n                    <Text style={styles.text}>Password</Text>\n                    <TextInput style={styles.input} onChangeText={onChangePassword} value={password}/>\n\n\n            <Button title=\"register\" onPress={() => {\n                register({name, loginId, password});\n                navigation.goBack();\n            }}/>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container : {\n        alignItems : \"center\",\n        justifyContent : \"center\",\n        flex:1\n    },\n\n    input : {\n        borderWidth : 1,\n        marginVertical : 10,\n        borderRadius : 10,\n        height:40,\n        width:300\n    },\n    text:{\n        marginLeft : 10,\n        fontWeight : \"bold\",\n        textAlign:\"center\"\n    }\n})\n\nexport default RegisterScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}