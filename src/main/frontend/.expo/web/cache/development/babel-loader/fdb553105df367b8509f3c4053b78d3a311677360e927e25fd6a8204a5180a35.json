{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport IP_ADDRESS from \"./Const\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getSessionId() {\n  return _getSessionId.apply(this, arguments);\n}\nfunction _getSessionId() {\n  _getSessionId = _asyncToGenerator(function* () {\n    return yield AsyncStorage.getItem(\"sessionId\");\n  });\n  return _getSessionId.apply(this, arguments);\n}\nvar FriendsScreen = function FriendsScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    chatRoomId = _useState2[0],\n    setChatRoomId = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  var idParam = route.params;\n  var memberId = idParam.memberId;\n  function createChatRoom(_x, _x2, _x3) {\n    return _createChatRoom.apply(this, arguments);\n  }\n  function _createChatRoom() {\n    _createChatRoom = _asyncToGenerator(function* (memberId, friendId, friendName) {\n      console.log(\"memberId : \" + memberId + \", friendId : \" + friendId);\n      yield axios.post(`http://${IP_ADDRESS}:8080/chatroom/new`, JSON.stringify({\n        memberId: memberId,\n        friendId: friendId\n      }), {\n        headers: {\n          \"content-type\": \"Application/Json\"\n        }\n      }).then(function (value) {\n        var chatRoomId = value.data.chatRoomId;\n        navigation.navigate(\"ChatScreen\", {\n          friendName: friendName,\n          friendId: friendId,\n          memberId: memberId,\n          chatRoomId: chatRoomId\n        });\n      });\n    });\n    return _createChatRoom.apply(this, arguments);\n  }\n  useEffect(function () {\n    function setting() {\n      return _setting.apply(this, arguments);\n    }\n    function _setting() {\n      _setting = _asyncToGenerator(function* () {\n        return yield getSessionId();\n      });\n      return _setting.apply(this, arguments);\n    }\n    var promise = setting();\n    promise.then(function () {\n      var _ref2 = _asyncToGenerator(function* (value) {\n        try {\n          var result = yield axios.get(`http://${IP_ADDRESS}:8080/members/${value}/friends`, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          setData(result.data);\n        } catch (e) {\n          console.log(\"axios error : \" + e);\n        }\n      });\n      return function (_x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  }, []);\n  useEffect(function () {}, [chatRoomId]);\n  var Item = function Item(_ref3) {\n    var friendId = _ref3.friendId,\n      friendName = _ref3.friendName;\n    return _jsxs(View, {\n      style: styles.member_container,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: friendName\n      }), _jsx(Button, {\n        title: \"chat\",\n        onPress: function onPress() {\n          createChatRoom(memberId, friendId, friendName);\n        }\n      })]\n    });\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      data: data,\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsx(Item, {\n          friendId: item.friendId,\n          friendName: item.friendName\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.friendId;\n      }\n    }), _jsx(Button, {\n      title: \"async\",\n      onPress: function onPress() {\n        function setting() {\n          return _setting2.apply(this, arguments);\n        }\n        function _setting2() {\n          _setting2 = _asyncToGenerator(function* () {\n            return yield getSessionId();\n          });\n          return _setting2.apply(this, arguments);\n        }\n        var promise = setting();\n        promise.then(function () {\n          var _ref5 = _asyncToGenerator(function* (value) {\n            try {\n              var result = yield axios.get(`http://${IP_ADDRESS}:8080/members/${value}/friends`, {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n              setData(result.data);\n            } catch (e) {\n              console.log(\"axios error : \" + e);\n            }\n          });\n          return function (_x5) {\n            return _ref5.apply(this, arguments);\n          };\n        }());\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1\n  },\n  member_container: {\n    flex: 1,\n    borderWidth: 2,\n    width: 300,\n    height: 80,\n    marginVertical: 5,\n    padding: 4,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10\n  },\n  text: {\n    fontSize: 15\n  }\n});\nexport default FriendsScreen;","map":{"version":3,"names":["AsyncStorage","React","useEffect","useState","axios","IP_ADDRESS","jsx","_jsx","jsxs","_jsxs","getSessionId","_getSessionId","apply","arguments","_asyncToGenerator","getItem","FriendsScreen","_ref","route","navigation","_useState","_useState2","_slicedToArray","chatRoomId","setChatRoomId","_useState3","_useState4","data","setData","idParam","params","memberId","createChatRoom","_x","_x2","_x3","_createChatRoom","friendId","friendName","console","log","post","JSON","stringify","headers","then","value","navigate","setting","_setting","promise","_ref2","result","get","e","_x4","Item","_ref3","View","style","styles","member_container","children","Text","text","Button","title","onPress","SafeAreaView","container","FlatList","renderItem","_ref4","item","keyExtractor","_setting2","_ref5","_x5","StyleSheet","create","alignItems","justifyContent","flex","borderWidth","width","height","marginVertical","padding","flexDirection","borderRadius","fontSize"],"sources":["/Users/jeonjun-wan/Documents/sloppyTalk/src/main/frontend/FriendsScreen.js"],"sourcesContent":["import {Button, FlatList, SafeAreaView, StyleSheet, Text, View} from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport IP_ADDRESS from \"./Const\";\n\nasync function getSessionId(){\n    return await AsyncStorage.getItem(\"sessionId\");\n}\n\n\n\nconst FriendsScreen = ({route,navigation}) =>{\n    const [chatRoomId, setChatRoomId] = useState(null);\n    const [data, setData] = useState([]);\n    const idParam = route.params;\n    const memberId = idParam.memberId;\n\n    async function createChatRoom(memberId, friendId, friendName) {\n        console.log(\"memberId : \" + memberId+ \", friendId : \" + friendId);\n        await axios.post(`http://${IP_ADDRESS}:8080/chatroom/new`,\n            JSON.stringify({\n                memberId,\n                friendId\n            }),{\n                headers:{\n                    \"content-type\" : \"Application/Json\"\n                }\n            }\n        ).then(value => {\n\n            const chatRoomId = value.data.chatRoomId;\n            navigation.navigate(\"ChatScreen\", {\n                friendName: friendName,\n                friendId: friendId,\n                memberId : memberId,\n                chatRoomId : chatRoomId,\n            })\n        });\n    }\n\n    useEffect(() =>{\n        async function setting(){\n            return await getSessionId();\n        }\n        const promise = setting();\n\n        promise.then(async (value) =>\n            {\n               try{\n                   const result= await axios.get(`http://${IP_ADDRESS}:8080/members/${value}/friends`,\n                       {\n                           headers:{\n                               'Content-Type': 'application/json'\n                           }\n                       }\n                   );\n                   setData(result.data);\n               }catch(e){\n                   console.log(\"axios error : \" + e);\n               }\n\n            }\n        );\n\n    },[]);\n    useEffect(() => {},[chatRoomId]);\n    const Item = ({friendId,friendName}) => (\n        <View style={styles.member_container}>\n            <Text style={styles.text}>{friendName}</Text>\n            <Button title=\"chat\" onPress={\n                () => {\n                    createChatRoom(memberId, friendId,friendName);\n                }\n            }\n            />\n        </View>\n    )\n    return (\n        <SafeAreaView style={styles.container}>\n            <FlatList data={data}\n                      renderItem={({item}) => <Item friendId={item.friendId} friendName={item.friendName}/>}\n                      keyExtractor={item => item.friendId}\n            />\n            <Button title=\"async\" onPress={() => {\n                async function setting(){\n                    return await getSessionId();\n                }\n                const promise = setting();\n\n                promise.then(async (value) =>\n                    {\n                        try{\n                            const result= await axios.get(`http://${IP_ADDRESS}:8080/members/${value}/friends`,\n                                {\n                                    headers:{\n                                        'Content-Type': 'application/json'\n                                    }\n                                }\n                            );\n                            setData(result.data);\n                        }catch(e){\n                            console.log(\"axios error : \" + e);\n                        }\n\n                    }\n                );\n            }}/>\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container:{\n        alignItems:\"center\",\n        justifyContent : \"center\",\n        flex:1\n\n    },\n    member_container:{\n        flex:1,\n        borderWidth:2,\n        width : 300,\n        height : 80,\n        marginVertical : 5,\n        padding : 4,\n        flexDirection : \"row\",\n        justifyContent : \"space-between\",\n        alignItems :\"center\",\n        borderRadius : 10\n\n\n    },\n    text:{\n        fontSize : 15\n    }\n})\n\nexport default FriendsScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}