{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport IP_ADDRESS from \"./Const\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatScreen = function ChatScreen(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    friendName = _route$params.friendName,\n    friendId = _route$params.friendId,\n    memberId = _route$params.memberId,\n    chatRoomId = _route$params.chatRoomId;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    onChangeText = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messages = _useState4[0],\n    setMessages = _useState4[1];\n  var stompClient = useRef(null);\n  var nextId = useRef(0);\n  useEffect(function () {\n    var connect = function connect() {\n      axios.get(`http://${IP_ADDRESS}:8080/chatroom/${chatRoomId}/messages`, {\n        headers: {\n          \"content-type\": \"Application/Json\"\n        }\n      }).then(function (response) {\n        console.log(response.data);\n        setMessages(response.data.messageDataList);\n        nextId.current = response.data.startId;\n      }).catch(function (e) {\n        return console.log(\"axios error : \" + e);\n      });\n      var sock = new SockJS(`http://${IP_ADDRESS}:8080/sloppy-gate`);\n      stompClient.current = Stomp.over(sock);\n      stompClient.current.connect({}, function (frame) {\n        console.log(\"Connected: \" + frame);\n        stompClient.current.subscribe(`/chat_room/${chatRoomId}`, function (message) {\n          var json = JSON.parse(message.body);\n          setMessages(function (prevMessages) {\n            return [].concat(_toConsumableArray(prevMessages), [{\n              id: nextId.current,\n              fromId: json.fromId,\n              content: json.content\n            }]);\n          });\n          nextId.current += 1;\n        });\n      }, function (error) {\n        console.log(\"Error: \" + error);\n      });\n    };\n    connect();\n    return function () {\n      if (stompClient.current && stompClient.current.connected) {\n        stompClient.current.disconnect();\n      }\n    };\n  }, [chatRoomId]);\n  var sendMessage = function sendMessage() {\n    if (text.trim() !== \"\" && stompClient.current && stompClient.current.connected) {\n      stompClient.current.send(\"/ws/private\", {}, JSON.stringify({\n        fromId: memberId,\n        toId: friendId,\n        content: text,\n        chatRoomId: chatRoomId\n      }));\n      onChangeText(\"\");\n    }\n  };\n  var MessageComponent = function MessageComponent(_ref2) {\n    var fromId = _ref2.fromId,\n      content = _ref2.content;\n    return _jsxs(View, {\n      style: fromId === memberId ? styles.myMessageBox : styles.otherMessageBox,\n      children: [_jsx(Text, {\n        style: styles.name,\n        children: fromId === memberId ? 'Me' : friendName\n      }), _jsx(View, {\n        style: styles.contentBox,\n        children: _jsx(Text, {\n          style: styles.content,\n          children: content\n        })\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.chatContainer,\n      children: _jsx(FlatList, {\n        data: messages,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsx(MessageComponent, {\n            fromId: item.fromId,\n            content: item.content\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      })\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(View, {\n        style: styles.inputBox,\n        children: _jsx(TextInput, {\n          value: text,\n          onChangeText: onChangeText,\n          style: styles.textInput\n        })\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          title: \"Send\",\n          onPress: sendMessage\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  chatContainer: {\n    flex: 7\n  },\n  inputContainer: {\n    flex: 1,\n    borderWidth: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  inputBox: {\n    flex: 4,\n    justifyContent: \"center\"\n  },\n  button: {\n    flex: 1,\n    marginHorizontal: 4\n  },\n  textInput: {\n    borderWidth: 1,\n    borderRadius: 10,\n    height: 35,\n    marginHorizontal: 4\n  },\n  myMessageBox: {\n    margin: 4,\n    justifyContent: \"center\",\n    alignItems: \"flex-end\",\n    padding: 10\n  },\n  otherMessageBox: {\n    margin: 4,\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    padding: 10\n  },\n  contentBox: {\n    borderWidth: 1,\n    margin: 10,\n    borderRadius: 15,\n    minHeight: 20,\n    padding: 10,\n    maxWidth: 200\n  },\n  name: {\n    fontSize: 12\n  },\n  content: {\n    fontSize: 20\n  }\n});\nexport default ChatScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","FlatList","TextInput","Button","StyleSheet","SockJS","Stomp","IP_ADDRESS","axios","jsx","_jsx","jsxs","_jsxs","ChatScreen","_ref","route","_route$params","params","friendName","friendId","memberId","chatRoomId","_useState","_useState2","_slicedToArray","text","onChangeText","_useState3","_useState4","messages","setMessages","stompClient","nextId","connect","get","headers","then","response","console","log","data","messageDataList","current","startId","catch","e","sock","over","frame","subscribe","message","json","JSON","parse","body","prevMessages","concat","_toConsumableArray","id","fromId","content","error","connected","disconnect","sendMessage","trim","send","stringify","toId","MessageComponent","_ref2","style","styles","myMessageBox","otherMessageBox","children","name","contentBox","container","chatContainer","renderItem","_ref3","item","keyExtractor","inputContainer","inputBox","value","textInput","button","title","onPress","create","flex","justifyContent","borderWidth","flexDirection","alignItems","marginHorizontal","borderRadius","height","margin","padding","minHeight","maxWidth","fontSize"],"sources":["/Users/jeonjun-wan/Documents/sloppyTalk/src/main/frontend/ChatScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { View, Text, FlatList, TextInput, Button, StyleSheet } from 'react-native';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport IP_ADDRESS from \"./Const\";\nimport axios from \"axios\";\n\nconst ChatScreen = ({ route }) => {\n    const { friendName, friendId, memberId, chatRoomId } = route.params;\n\n    const [text, onChangeText] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const stompClient = useRef(null);\n    const nextId = useRef(0);\n\n    useEffect(() => {\n        const connect = () => {\n\n            axios.get(\n                `http://${IP_ADDRESS}:8080/chatroom/${chatRoomId}/messages`,\n                {\n                    headers:{\n                        \"content-type\" : \"Application/Json\"\n                    }\n                }\n            ).then(\n                response => {\n                    console.log(response.data);\n                    setMessages(response.data.messageDataList);\n                    nextId.current = response.data.startId;\n\n\n                }\n            ).catch(\n                e => console.log(\"axios error : \" + e)\n            )\n\n            const sock = new SockJS(`http://${IP_ADDRESS}:8080/sloppy-gate`);\n            stompClient.current = Stomp.over(sock);\n\n            stompClient.current.connect({}, frame => {\n                console.log(\"Connected: \" + frame);\n\n                stompClient.current.subscribe(\n                    `/chat_room/${chatRoomId}`,\n                    (message) => {\n                        const json = JSON.parse(message.body);\n                        setMessages(prevMessages => [...prevMessages, { id: nextId.current, fromId: json.fromId, content: json.content }]);\n                        nextId.current += 1;\n                    }\n                );\n            }, error => {\n                console.log(\"Error: \" + error);\n            });\n        };\n\n        connect();\n\n        return () => {\n            // Disconnect WebSocket when the component is unmounted\n            if (stompClient.current && stompClient.current.connected) {\n                stompClient.current.disconnect();\n            }\n        };\n    }, [chatRoomId]);\n\n    const sendMessage = () => {\n        if (text.trim() !== \"\" && stompClient.current && stompClient.current.connected) {\n            stompClient.current.send(\"/ws/private\", {}, JSON.stringify({\n                fromId: memberId,\n                toId: friendId,\n                content: text,\n                chatRoomId: chatRoomId\n            }));\n            onChangeText(\"\");\n        }\n    };\n\n    const MessageComponent = ({ fromId, content }) => (\n        <View style={fromId === memberId ? styles.myMessageBox : styles.otherMessageBox}>\n            <Text style={styles.name}>{fromId === memberId ? 'Me' : friendName}</Text>\n            <View style={styles.contentBox}>\n                <Text style={styles.content}>{content}</Text>\n            </View>\n        </View>\n    );\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.chatContainer}>\n                <FlatList\n                    data={messages}\n                    renderItem={({ item }) => <MessageComponent fromId={item.fromId} content={item.content} />}\n                    keyExtractor={(item) => item.id}\n                />\n            </View>\n\n            <View style={styles.inputContainer}>\n                <View style={styles.inputBox}>\n                    <TextInput value={text} onChangeText={onChangeText} style={styles.textInput} />\n                </View>\n                <View style={styles.button}>\n                    <Button title=\"Send\" onPress={sendMessage} />\n                </View>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\"\n    },\n    chatContainer: {\n        flex: 7,\n    },\n    inputContainer: {\n        flex: 1,\n        borderWidth: 1,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n    },\n    inputBox: {\n        flex: 4,\n        justifyContent: \"center\",\n    },\n    button: {\n        flex: 1,\n        marginHorizontal: 4,\n    },\n    textInput: {\n        borderWidth: 1,\n        borderRadius: 10,\n        height: 35,\n        marginHorizontal: 4,\n    },\n    myMessageBox: {\n        margin: 4,\n        justifyContent: \"center\",\n        alignItems: \"flex-end\",\n        padding: 10\n    },\n    otherMessageBox: {\n        margin: 4,\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        padding: 10\n    },\n    contentBox: {\n        borderWidth: 1,\n        margin: 10,\n        borderRadius: 15,\n        minHeight: 20,\n        padding: 10,\n        maxWidth: 200\n    },\n    name: {\n        fontSize: 12\n    },\n    content: {\n        fontSize: 20\n    },\n});\n\nexport default ChatScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}